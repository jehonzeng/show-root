<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szhengzhu.mapper.IndentPayMapper">
    <resultMap id="BaseResultMap" type="com.szhengzhu.bean.ordering.IndentPay">
        <id column="mark_id" jdbcType="VARCHAR" property="markId"/>
        <result column="indent_id" jdbcType="VARCHAR" property="indentId"/>
        <result column="pay_id" jdbcType="VARCHAR" property="payId"/>
        <result column="pay_name" jdbcType="VARCHAR" property="payName"/>
        <result column="discount_id" jdbcType="VARCHAR" property="discountId"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="pay_amount" jdbcType="DECIMAL" property="payAmount"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="consumption_id" jdbcType="VARCHAR" property="consumptionId"/>
        <result column="employee_id" jdbcType="VARCHAR" property="employeeId"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        mark_id, indent_id, pay_id, pay_name, discount_id, quantity, amount, pay_amount, user_id, consumption_id, employee_id,
        code, create_time, modify_time, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_indent_pay
        where mark_id = #{markId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from t_indent_pay
        where mark_id = #{markId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.szhengzhu.bean.ordering.IndentPay">
        insert into t_indent_pay (mark_id, indent_id, pay_id,
                                  pay_name, discount_id, quantity, amount, pay_amount,
                                  user_id, consumption_id, employee_id, code,
                                  create_time, modify_time, status)
        values (#{markId,jdbcType=VARCHAR}, #{indentId,jdbcType=VARCHAR}, #{payId,jdbcType=VARCHAR},
                #{payName,jdbcType=VARCHAR}, #{discountId,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER},
                #{amount,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL},
                #{userId,jdbcType=VARCHAR}, #{consumptionId,jdbcType=VARCHAR}, #{employeeId,jdbcType=VARCHAR},
                #{code,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.szhengzhu.bean.ordering.IndentPay">
        insert into t_indent_pay
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="markId != null">
                mark_id,
            </if>
            <if test="indentId != null">
                indent_id,
            </if>
            <if test="payId != null">
                pay_id,
            </if>
            <if test="payName != null">
                pay_name,
            </if>
            <if test="discountId != null">
                discount_id,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="payAmount != null">
                pay_amount,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="consumptionId != null">
                consumption_id,
            </if>
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="markId != null">
                #{markId,jdbcType=VARCHAR},
            </if>
            <if test="indentId != null">
                #{indentId,jdbcType=VARCHAR},
            </if>
            <if test="payId != null">
                #{payId,jdbcType=VARCHAR},
            </if>
            <if test="payName != null">
                #{payName,jdbcType=VARCHAR},
            </if>
            <if test="discountId != null">
                #{discountId,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="consumptionId != null">
                #{consumptionId,jdbcType=VARCHAR},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.szhengzhu.bean.ordering.IndentPay">
        update t_indent_pay
        <set>
            <if test="indentId != null">
                indent_id = #{indentId,jdbcType=VARCHAR},
            </if>
            <if test="payId != null">
                pay_id = #{payId,jdbcType=VARCHAR},
            </if>
            <if test="payName != null">
                pay_name = #{payName,jdbcType=VARCHAR},
            </if>
            <if test="discountId != null">
                discount_id = #{discountId,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="consumptionId != null">
                consumption_id = #{consumptionId,jdbcType=VARCHAR},
            </if>
            <if test="employeeId != null">
                employee_id = #{employeeId,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where mark_id = #{markId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.szhengzhu.bean.ordering.IndentPay">
        update t_indent_pay
        set indent_id      = #{indentId,jdbcType=VARCHAR},
            pay_id         = #{payId,jdbcType=VARCHAR},
            pay_name       = #{payName,jdbcType=VARCHAR},
            discount_id    = #{discountId,jdbcType=VARCHAR},
            quantity       = #{quantity,jdbcType=INTEGER},
            amount         = #{amount,jdbcType=DECIMAL},
            pay_amount     = #{payAmount,jdbcType=DECIMAL},
            user_id        = #{userId,jdbcType=VARCHAR},
            consumption_id = #{consumptionId,jdbcType=VARCHAR},
            employee_id    = #{employeeId,jdbcType=VARCHAR},
            code           = #{code,jdbcType=VARCHAR},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            modify_time    = #{modifyTime,jdbcType=TIMESTAMP},
            status         = #{status,jdbcType=INTEGER}
        where mark_id = #{markId,jdbcType=VARCHAR}
    </update>
    <select id="selectIndentPayVo" resultType="com.szhengzhu.bean.ordering.vo.IndentPayVo">
        SELECT p.mark_id AS markId, p.pay_amount AS payAmount, p.pay_id AS payId, p.pay_name as payName
        FROM t_indent_pay p
        WHERE p.`status` = 1
          AND indent_id = #{indentId,jdbcType=VARCHAR}
    </select>
    <select id="selectIncomePay" resultType="com.szhengzhu.bean.ordering.print.PrintPay">
        SELECT pay_id                 AS payId,
               pay_name               AS payName,
               SUM(quantity)          AS quantity,
               sum(ifnull(amount, 0)) as amount,
               SUM(pay_amount)        AS payAmount
        FROM t_indent_pay p
                     LEFT JOIN t_indent_info i ON p.indent_id = i.mark_id
        WHERE TO_DAYS(bill_time) between TO_DAYS(#{startDate}) and TO_DAYS(#{endDate})
          AND i.indent_status = 'IS04'
          AND i.store_id = #{storeId}
          AND p.status = 1
        GROUP BY pay_id, pay_name
    </select>
    <insert id="insertBatch" parameterType="java.util.List">
        insert into t_indent_pay
        (mark_id, indent_id, pay_id, pay_name, discount_id,quantity, amount, pay_amount,
        user_id, consumption_id, employee_id, code, create_time, modify_time, status)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.markId,jdbcType=VARCHAR}, #{item.indentId,jdbcType=VARCHAR}, #{item.payId,jdbcType=VARCHAR},
            #{item.payName,jdbcType=VARCHAR}, #{item.discountId,jdbcType=VARCHAR},#{item.quantity,jdbcType=INTEGER},
            #{item.amount,jdbcType=DECIMAL},#{item.payAmount,jdbcType=DECIMAL},
            #{item.userId,jdbcType=VARCHAR}, #{item.consumptionId,jdbcType=VARCHAR},
            #{item.employeeId,jdbcType=VARCHAR}, #{item.code,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.modifyTime,jdbcType=TIMESTAMP},
            #{item.status,jdbcType=INTEGER})
        </foreach>
    </insert>
    <select id="selectOtherPay" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_indent_pay
        where status = 0 and indent_id=#{indentId,jdbcType=VARCHAR}
    </select>
    <update id="updateMemberDiscount">
        update t_indent_pay set modify_time = NOW()
        <if test="status != null">
            ,status = #{status}
        </if>
        <if test="payAmount != null">
            , pay_amount=#{payAmount}
        </if>
        <where>
            <if test="indentId != null and indentId != ''">
                AND indent_id = #{indentId}
            </if>
            <if test="payId != null and payId != ''">
                AND pay_id = #{payId}
            </if>
        </where>
    </update>
    <select id="selectPayDiscount" resultType="com.szhengzhu.bean.ordering.vo.IndentPayVo">
        SELECT p.mark_id AS markId, p.pay_amount AS payAmount, p.pay_id AS payId, p.pay_name as payName
        FROM t_indent_pay p
                     INNER JOIN t_pay_info i ON p.pay_id = i.mark_id
        WHERE p.`status` = 1
          AND i.discount_have = 0
          AND indent_id = #{indentId,jdbcType=VARCHAR}
    </select>
    <select id="selectByPayId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_indent_pay WHERE indent_id = #{indentId} AND pay_id = #{payId}
    </select>
</mapper>
