<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szhengzhu.mapper.GoodsStockMapper">
    <resultMap id="BaseResultMap" type="com.szhengzhu.bean.goods.GoodsStock">
        <id column="mark_id" property="markId" jdbcType="VARCHAR" />
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
        <result column="specification_ids" property="specificationIds" jdbcType="VARCHAR" />
        <result column="storehouse_id" property="storehouseId" jdbcType="VARCHAR" />
        <result column="server_status" property="serverStatus" jdbcType="BIT" />
        <result column="total_stock" property="totalStock" jdbcType="INTEGER" />
        <result column="current_stock" property="currentStock" jdbcType="INTEGER" />
    </resultMap>
    <resultMap type="com.szhengzhu.bean.vo.StockVo" id="BaseResultMapVo" extends="BaseResultMap">
        <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
        <result column="attrList" property="attrList" jdbcType="VARCHAR" />
        <result column="depotName" property="depotName" jdbcType="VARCHAR" />
        <result column="base_price" property="basePrice" jdbcType="DECIMAL" />
        <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
    </resultMap>
    <sql id="Base_Column_List">
        s.mark_id, s.goods_id, s.specification_ids, s.storehouse_id,
        s.server_status, s.total_stock, s.current_stock
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from t_goods_stock s
        where s.mark_id = #{markId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from t_goods_stock
        where mark_id = #{markId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.szhengzhu.bean.goods.GoodsStock">
        insert into t_goods_stock (mark_id, goods_id, specification_ids,
            storehouse_id, server_status, total_stock,  current_stock)
        values (#{markId,jdbcType=VARCHAR},
            #{goodsId,jdbcType=VARCHAR},
            #{specificationIds,jdbcType=VARCHAR},
            #{storehouseId,jdbcType=VARCHAR}, #{serverStatus,jdbcType=BIT},
            #{totalStock,jdbcType=INTEGER},
            #{currentStock,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.szhengzhu.bean.goods.GoodsStock">
        insert into t_goods_stock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="markId != null">
                mark_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="specificationIds != null">
                specification_ids,
            </if>
            <if test="storehouseId != null">
                storehouse_id,
            </if>
            <if test="serverStatus != null">
                server_status,
            </if>
            <if test="totalStock != null">
                total_stock,
            </if>
            <if test="currentStock != null">
                current_stock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="markId != null">
                #{markId,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="specificationIds != null">
                #{specificationIds,jdbcType=VARCHAR},
            </if>
            <if test="storehouseId != null">
                #{storehouseId,jdbcType=VARCHAR},
            </if>
            <if test="serverStatus != null">
                #{serverStatus,jdbcType=BIT},
            </if>
            <if test="totalStock != null">
                #{totalStock,jdbcType=INTEGER},
            </if>
            <if test="currentStock != null">
                #{currentStock,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.szhengzhu.bean.goods.GoodsStock">
        update t_goods_stock
        <set>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="specificationIds != null">
                specification_ids =
                #{specificationIds,jdbcType=VARCHAR},
            </if>
            <if test="storehouseId != null">
                storehouse_id = #{storehouseId,jdbcType=VARCHAR},
            </if>
            <if test="serverStatus != null">
                server_status = #{serverStatus,jdbcType=BIT},
            </if>
            <if test="totalStock != null">
                total_stock = #{totalStock,jdbcType=INTEGER},
            </if>
            <if test="currentStock != null">
                current_stock =
                #{currentStock,jdbcType=INTEGER},
            </if>
        </set>
        where mark_id = #{markId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.szhengzhu.bean.goods.GoodsStock">
        update t_goods_stock
        set goods_id = #{goodsId,jdbcType=VARCHAR},
        specification_ids = #{specificationIds,jdbcType=VARCHAR},
        storehouse_id = #{storehouseId,jdbcType=VARCHAR},
        server_status = #{serverStatus,jdbcType=BIT},
        total_stock = #{totalStock,jdbcType=INTEGER},
        current_stock = #{currentStock,jdbcType=INTEGER}
        where mark_id = #{markId,jdbcType=VARCHAR}
    </update>
    <select id="selectByExampleSelective" resultMap="BaseResultMapVo" parameterType="com.szhengzhu.bean.goods.GoodsStock">
        select
        <include refid="Base_Column_List" />
        ,
        (SELECT GROUP_CONCAT(CONCAT(attr_name, ':', attr_value) SEPARATOR ';') FROM t_specification_info WHERE FIND_IN_SET(mark_id, s.specification_ids)) AS attrList,
        (SELECT name FROM t_storehouse_info WHERE mark_id =storehouse_id) AS depotName,
        (SELECT goods_name FROM t_goods_info WHERE mark_id = s.goods_id) AS goodsName,
        g.base_price, g.sale_price
        from t_goods_stock s left join t_goods_specification g on (s.goods_id=g.goods_id and s.specification_ids=g.specification_ids)
        <where>
            <if test="markId != null">
                s.mark_id= #{markId,jdbcType=VARCHAR}
            </if>
            <if test="goodsId != null">
                AND s.goods_id= #{goodsId,jdbcType=VARCHAR}
            </if>
            <if test="specificationIds != null">
                AND s.specification_ids = #{specificationIds,jdbcType=VARCHAR}
            </if>
            <if test="storehouseId != null">
                AND s.storehouse_id =#{storehouseId,jdbcType=VARCHAR}
            </if>
            <if test="serverStatus != null">
                AND s.server_status= #{serverStatus,jdbcType=BIT}
            </if>
            <if test="totalStock != null">
                AND s.total_stock= #{totalStock,jdbcType=INTEGER}
            </if>
            <if test="currentStock != null">
                AND s.current_stock= #{currentStock,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="selectGoodsStocks" resultMap="BaseResultMapVo" parameterType="java.util.List">
        select
        <include refid="Base_Column_List" /> ,
        (SELECT goods_name FROM t_goods_info WHERE mark_id = s.goods_id) AS goodsName,
        g.base_price, g.sale_price
        from t_goods_stock s left join t_goods_specification g on (s.goods_id=g.goods_id and s.specification_ids=g.specification_ids)
        where s.mark_id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <insert id="insertBatch">
        insert into t_goods_stock (mark_id, goods_id, specification_ids, storehouse_id, server_status, total_stock, current_stock) 
        values
        <foreach collection="list" item="stock" index="index" separator=",">
            (#{stock.markId,jdbcType=VARCHAR},
            #{stock.goodsId,jdbcType=VARCHAR},
            #{stock.specificationIds,jdbcType=VARCHAR},
            #{stock.storehouseId,jdbcType=VARCHAR}, #{stock.serverStatus,jdbcType=BIT},
            #{stock.totalStock,jdbcType=INTEGER},
            #{stock.currentStock,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <select id="selectDeliveryAndStock" resultType="java.util.HashMap">
        SELECT IF(d.mark_id IS NULL,0, 1) AS isDelivery,s.current_stock AS currentStock
        FROM t_delivery_area d LEFT JOIN 
             db_order.t_user_address a ON (d.city=a.city AND d.province=a.province AND d.area=a.area) LEFT JOIN 
             t_storehouse_info h ON d.storehouse_id=h.mark_id LEFT JOIN 
             t_goods_stock s ON (d.storehouse_id=s.storehouse_id AND s.goods_id = #{goodsId,jdbcType=VARCHAR}
            AND s.specification_ids = #{specIds,jdbcType=VARCHAR})
        WHERE a.mark_id=#{addressId,jdbcType=VARCHAR} AND d.server_status=1 AND h.server_status=1 AND s.server_status=1 
        ORDER BY s.goods_id DESC,s.current_stock DESC LIMIT 1
    </select>
</mapper>