<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szhengzhu.mapper.FoodsItemMapper">
    <resultMap
        id="BaseResultMap"
        type="com.szhengzhu.bean.goods.FoodsItem">
        <id
            column="mark_id"
            property="markId"
            jdbcType="VARCHAR" />
        <result
            column="food_id"
            property="foodId"
            jdbcType="VARCHAR" />
        <result
            column="goods_id"
            property="goodsId"
            jdbcType="VARCHAR" />
        <result
            column="specification_ids"
            property="specificationIds"
            jdbcType="VARCHAR" />
        <result
            column="use_size"
            property="useSize"
            jdbcType="DECIMAL" />
        <result
            column="server_status"
            property="serverStatus"
            jdbcType="BIT" />
    </resultMap>
    <resultMap
        type="com.szhengzhu.bean.vo.GoodsFoodVo"
        id="BaseResultMapVo"
        extends="BaseResultMap">
        <result
            column="goodsName"
            property="goodsName"
            jdbcType="VARCHAR" />
        <result
            column="food_name"
            property="foodName"
            jdbcType="VARCHAR" />
        <result
            column="purchase_rate"
            property="purchaseRate"
            jdbcType="DECIMAL" />
        <result
            column="unit"
            property="unit"
            jdbcType="VARCHAR" />
        <result
            column="specList"
            property="specList"
            jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List">
        mark_id, food_id, goods_id, specification_ids, use_size,
        server_status
    </sql>
    <select
        id="selectByPrimaryKey"
        resultMap="BaseResultMap"
        parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from t_food_item
        where mark_id = #{markId,jdbcType=VARCHAR}
    </select>
    <delete
        id="deleteByPrimaryKey"
        parameterType="java.lang.String">
        delete from t_food_item
        where mark_id =
        #{markId,jdbcType=VARCHAR}
    </delete>
    <insert
        id="insert"
        parameterType="com.szhengzhu.bean.goods.FoodsItem">
        insert into t_food_item (mark_id, food_id,
        goods_id,
        specification_ids, use_size, server_status
        )
        values
        (#{markId,jdbcType=VARCHAR}, #{foodId,jdbcType=VARCHAR},
        #{goodsId,jdbcType=VARCHAR},
        #{specificationIds,jdbcType=VARCHAR},
        #{useSize,jdbcType=DECIMAL}, #{serverStatus,jdbcType=BIT}
        )
    </insert>
    <insert
        id="insertSelective"
        parameterType="com.szhengzhu.bean.goods.FoodsItem">
        insert into t_food_item
        <trim
            prefix="("
            suffix=")"
            suffixOverrides=",">
            <if test="markId != null">
                mark_id,
            </if>
            <if test="foodId != null">
                food_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="specificationIds != null">
                specification_ids,
            </if>
            <if test="useSize != null">
                use_size,
            </if>
            <if test="serverStatus != null">
                server_status,
            </if>
        </trim>
        <trim
            prefix="values ("
            suffix=")"
            suffixOverrides=",">
            <if test="markId != null">
                #{markId,jdbcType=VARCHAR},
            </if>
            <if test="foodId != null">
                #{foodId,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="specificationIds != null">
                #{specificationIds,jdbcType=VARCHAR},
            </if>
            <if test="useSize != null">
                #{useSize,jdbcType=DECIMAL},
            </if>
            <if test="serverStatus != null">
                #{serverStatus,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update
        id="updateByPrimaryKeySelective"
        parameterType="com.szhengzhu.bean.goods.FoodsItem">
        update t_food_item
        <set>
            <if test="foodId != null">
                food_id = #{foodId,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="specificationIds != null">
                specification_ids =
                #{specificationIds,jdbcType=VARCHAR},
            </if>
            <if test="useSize != null">
                use_size = #{useSize,jdbcType=DECIMAL},
            </if>
            <if test="serverStatus != null">
                server_status = #{serverStatus,jdbcType=BIT},
            </if>
        </set>
        where mark_id = #{markId,jdbcType=VARCHAR}
    </update>
    <update
        id="updateByPrimaryKey"
        parameterType="com.szhengzhu.bean.goods.FoodsItem">
        update t_food_item
        set food_id =
        #{foodId,jdbcType=VARCHAR},
        goods_id =
        #{goodsId,jdbcType=VARCHAR},
        specification_ids =
        #{specificationIds,jdbcType=VARCHAR},
        use_size =
        #{useSize,jdbcType=DECIMAL},
        server_status =
        #{serverStatus,jdbcType=BIT}
        where mark_id =
        #{markId,jdbcType=VARCHAR}
    </update>
    <insert
        id="insertBatch"
        parameterType="java.util.List">
        insert into t_food_item
        ( mark_id,food_id,
        goods_id,specification_ids,
        use_size,server_status)
        values
        <foreach
            collection="list"
            item="item"
            index="index"
            separator=",">
            (#{item.markId,jdbcType=VARCHAR},
            #{item.foodId,jdbcType=VARCHAR},
            #{item.goodsId,jdbcType=VARCHAR},
            #{item.specificationIds,jdbcType=VARCHAR},
            #{item.useSize,jdbcType=DECIMAL},
            #{item.serverStatus,jdbcType=BIT})
        </foreach>
        ON DUPLICATE KEY UPDATE
        use_size = values(use_size)
    </insert>
    <select
        id="selectByExampleSelective"
        parameterType="com.szhengzhu.bean.goods.FoodsItem"
        resultMap="BaseResultMapVo">
        SELECT i.mark_id ,i.food_id ,f.food_name,
        (select a.`name` from
        db_base.t_attribute_info a where a.code = f.unit) as
        unit,(select g.goods_name from t_goods_info g where g.mark_id =
        i.goods_id) as goodsName,i.goods_id,i.use_size,
        f.purchase_rate,i.server_status,
        i.specification_ids,
        (SELECT
        GROUP_CONCAT(CONCAT_WS(':',
        attr_name,
        attr_value)
        SEPARATOR ';')
        FROM t_specification_info
        WHERE
        FIND_IN_SET(mark_id,i.specification_ids)) AS specList
        FROM
        t_food_item i LEFT JOIN
        t_food_info f
        ON i.food_id = f.mark_id
        <where>
            <if test="markId != null">
                i.mark_id = #{markId,jdbcType=VARCHAR}
            </if>
            <if test="foodId != null">
                AND i.food_id = #{foodId,jdbcType=VARCHAR}
            </if>
            <if test="goodsId != null">
                AND i.goods_id = #{goodsId,jdbcType=VARCHAR}
            </if>
            <if test="specificationIds != null">
                AND i.specification_ids =
                #{specificationIds,jdbcType=VARCHAR}
            </if>
            <if test="useSize != null">
                AND i.use_size = #{useSize,jdbcType=DECIMAL}
            </if>
            <if test="serverStatus != null">
                AND i.server_status =
                #{serverStatus,jdbcType=BIT}
            </if>
        </where>
    </select>
</mapper>