<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szhengzhu.mapper.GoodsSpecificationMapper">
    <resultMap id="BaseResultMap" type="com.szhengzhu.bean.goods.GoodsSpecification">
        <id column="mark_id" jdbcType="VARCHAR" property="markId" />
        <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
        <result column="specification_ids" jdbcType="VARCHAR" property="specificationIds" />
        <result column="server_status" jdbcType="BIT" property="serverStatus" />
        <result column="base_price" jdbcType="DECIMAL" property="basePrice" />
        <result column="sale_price" jdbcType="DECIMAL" property="salePrice" />
        <result column="specs" jdbcType="VARCHAR" property="specs" />
        <result column="goods_no" jdbcType="VARCHAR" property="goodsNo" />
    </resultMap>
    <sql id="Base_Column_List">
        mark_id, goods_id, specification_ids, server_status,
        base_price, sale_price,goods_no
    </sql>
    <select
        id="selectByPrimaryKey"
        parameterType="java.lang.String"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_goods_specification
        where mark_id = #{markId,jdbcType=VARCHAR}
    </select>
    <delete
        id="deleteByPrimaryKey"
        parameterType="java.lang.String">
        delete from t_goods_specification
        where mark_id = #{markId,jdbcType=VARCHAR}
    </delete>
    <insert
        id="insert"
        parameterType="com.szhengzhu.bean.goods.GoodsSpecification">
        insert into t_goods_specification (mark_id,
        goods_id, specification_ids, server_status, base_price,
        sale_price,goods_no)
        values (#{markId,jdbcType=VARCHAR},
        #{goodsId,jdbcType=VARCHAR},
        #{specificationIds,jdbcType=VARCHAR},
        #{serverStatus,jdbcType=BIT},
        #{basePrice,jdbcType=DECIMAL},
        #{salePrice,jdbcType=DECIMAL},
        #{goodsNo,jdbcType=VARCHAR})
    </insert>
    <insert
        id="insertSelective"
        parameterType="com.szhengzhu.bean.goods.GoodsSpecification">
        insert into t_goods_specification
        <trim
            prefix="("
            suffix=")"
            suffixOverrides=",">
            <if test="markId != null">
                mark_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="specificationIds != null">
                specification_ids,
            </if>
            <if test="serverStatus != null">
                server_status,
            </if>
            <if test="basePrice != null">
                base_price,
            </if>
            <if test="salePrice != null">
                sale_price,
            </if>
            <if test="goodsNo != null">
                goods_no,
            </if>
        </trim>
        <trim
            prefix="values ("
            suffix=")"
            suffixOverrides=",">
            <if test="markId != null">
                #{markId,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="specificationIds != null">
                #{specificationIds,jdbcType=VARCHAR},
            </if>
            <if test="serverStatus != null">
                #{serverStatus,jdbcType=BIT},
            </if>
            <if test="basePrice != null">
                #{basePrice,jdbcType=DECIMAL},
            </if>
            <if test="salePrice != null">
                #{salePrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsNo != null">
                 #{goodsNo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update
        id="updateByPrimaryKeySelective"
        parameterType="com.szhengzhu.bean.goods.GoodsSpecification">
        update t_goods_specification
        <set>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="specificationIds != null">
                specification_ids =
                #{specificationIds,jdbcType=VARCHAR},
            </if>
            <if test="serverStatus != null">
                server_status = #{serverStatus,jdbcType=BIT},
            </if>
            <if test="basePrice != null">
                base_price = #{basePrice,jdbcType=DECIMAL},
            </if>
            <if test="salePrice != null">
                sale_price = #{salePrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsNo != null">
                 goods_no = #{goodsNo,jdbcType=VARCHAR},
            </if>
        </set>
        where mark_id = #{markId,jdbcType=VARCHAR}
    </update>
    <update
        id="updateByPrimaryKey"
        parameterType="com.szhengzhu.bean.goods.GoodsSpecification">
        update t_goods_specification
        set goods_id = #{goodsId,jdbcType=VARCHAR},
            specification_ids = #{specificationIds,jdbcType=VARCHAR},
            server_status = #{serverStatus,jdbcType=BIT},
            base_price = #{basePrice,jdbcType=DECIMAL},
            sale_price = #{salePrice,jdbcType=DECIMAL},
            goods_no = #{goodsNo,jdbcType=VARCHAR}
        where mark_id = #{markId,jdbcType=VARCHAR}
    </update>
    <select
        id="selectByExampleSelective"
        parameterType="com.szhengzhu.bean.goods.GoodsSpecification"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        ,
        (SELECT GROUP_CONCAT(CONCAT(attr_name, ':', attr_value) SEPARATOR ';') FROM t_specification_info WHERE FIND_IN_SET(mark_id, specification_ids)) AS specs
        from t_goods_specification
        <where>
            <if test="goodsId != null">
                goods_id=#{goodsId,jdbcType=VARCHAR}
            </if>
            <if test="specificationIds != null">
                AND specification_ids =
                #{specificationIds,jdbcType=VARCHAR}
            </if>
            <if test="serverStatus != null">
                AND server_status = #{serverStatus,jdbcType=BIT}
            </if>
            <if test="goodsNo != null">
                 AND goods_no = #{goodsNo,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <insert id="insertBatch">
        insert into t_goods_specification (mark_id, goods_id,
        specification_ids, server_status, base_price, sale_price,goods_no)
        values
        <foreach
            collection="list"
            item="spec"
            index="index"
            separator=",">
            (#{spec.markId,jdbcType=VARCHAR},
            #{spec.goodsId,jdbcType=VARCHAR},
            #{spec.specificationIds,jdbcType=VARCHAR},
            #{spec.serverStatus,jdbcType=BIT},
            #{spec.basePrice,jdbcType=INTEGER},
            #{spec.salePrice,jdbcType=INTEGER},
            #{spec.goodsNo,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <select id="selectSpecGoodsInfo" resultType="com.szhengzhu.bean.wechat.vo.StockBase">
        SELECT g.mark_id AS goodsId, gs.specification_ids AS specificationIds, IFNULL(gs.sale_price,g.sale_price) AS basePrice,gs.goods_no AS goodsNo,
               IF(s.promotion_mode IS NULL,gs.sale_price,
                       CASE WHEN s.promotion_mode=0 THEN 
                                IFNULL(gs.sale_price,g.sale_price)-s.price 
                            WHEN s.promotion_mode=1 THEN 
                                IFNULL(gs.sale_price,g.sale_price) * s.discount 
                       END) AS salePrice,
               (SELECT GROUP_CONCAT(attr_value SEPARATOR ' ') 
                FROM t_specification_info WHERE FIND_IN_SET(mark_id, #{specIds,jdbcType=VARCHAR})) AS specs,
                if(gs.sale_price IS NULL, 0, IF(g.server_status <![CDATA[ <> ]]> 'ZT02', 0, 100)) AS currentStock
        FROM t_goods_info g LEFT JOIN t_goods_specification gs ON (g.mark_id=gs.goods_id AND gs.specification_ids=#{specIds,jdbcType=VARCHAR} AND gs.server_status=1) LEFT JOIN 
        (SELECT s.promotion_mode,s.price,s.discount,i.goods_id 
                 FROM t_special_info s LEFT JOIN t_special_item i ON s.mark_id=i.special_id 
                 WHERE s.server_status=1 AND s.promotion_type=1 AND 
                       (CASE WHEN s.start_time IS NOT NULL THEN  s.start_time <![CDATA[ < ]]> NOW() 
                             ELSE  1=1 
                        END) AND 
                       (CASE WHEN s.end_time IS NOT NULL THEN s.end_time <![CDATA[ > ]]> NOW() 
                              ELSE 1=1 
                         END)) AS s ON g.mark_id=s.goods_id 
        WHERE g.mark_id=#{goodsId,jdbcType=VARCHAR}
    </select>
</mapper>